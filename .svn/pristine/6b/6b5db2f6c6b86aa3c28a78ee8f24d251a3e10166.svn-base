package com.cn.graduation.controller;


import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.UnsupportedEncodingException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.io.FileUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;

import com.cn.graduation.common.AjaxObject;
import com.cn.graduation.model.Paper;
import com.cn.graduation.model.Student;
import com.cn.graduation.model.SysDate;
import com.cn.graduation.model.Teacher;
import com.cn.graduation.model.TpScore;
import com.cn.graduation.service.TeacherService;


@Controller
@RequestMapping(value="/yy/teacher/*")
public class TeacherController 
{
	@Autowired
	@Qualifier("teacherService")
	private TeacherService  service;
	
	//返回教师页面
	@RequestMapping(value="/index")
	public String index(){
		return "teacher/teacher";
	}
	
	//显示自己论题
	@RequestMapping(value="/myPaper")
	public String myPaper(HttpServletRequest request){
		Teacher user =(Teacher) request.getSession().getAttribute("admin");
		List<Paper> papers = service.getMyPaper(user.getTid());
		request.setAttribute("papers", papers);
		return"/teacher/teacher_my_paper";
	}
	
	//显示同组论题
	@RequestMapping(value="/groupPaper")
	public String groupPaper(HttpServletRequest request){
		Teacher user =(Teacher) request.getSession().getAttribute("admin");
		List<Paper> papers = service.getGroupPaper(user);
		request.setAttribute("papers", papers);
		return"/teacher/teacher_group_paper";
	}
	//显示我的学生
	@RequestMapping(value="/myStudent")
	public String myStudent(HttpServletRequest request){
		Teacher user =(Teacher) request.getSession().getAttribute("admin");
		List<Student> students = service.getMyStudent(user.getTid());
		request.setAttribute("students", students);
		return "teacher/teacher_my_student";
	}
	//显示我的学生2
		@RequestMapping(value="/myStudent2")
		public String myStudent2(HttpServletRequest request){
			Teacher user =(Teacher) request.getSession().getAttribute("admin");
			SysDate time = (SysDate)request.getSession().getAttribute("time");
			List<Student> students = service.getMyStudent2(user.getTid(),time.getSdid());
			request.setAttribute("students", students);
			return "teacher/teacher_my_student2";
		}
	//显示我的学生论文
		@RequestMapping(value="/myStudent_paper")
		public String myStudentPaper(HttpServletRequest request){
			Teacher user =(Teacher) request.getSession().getAttribute("admin");
			List<Student> students = service.getMyStudent(user.getTid());
			for(Student student:students){
				student.setPs(service.getPaperBySid(student.getSid()));
			}
			request.setAttribute("students", students);
			return "teacher/teacher_mystudent_paper";
		}
	//更新教师信息
	@RequestMapping(value="/update_info")
	public String updateInfo(HttpServletRequest request,Teacher one){
		service.updateInfo(one);
		one = service.getTeacherById(one.getTid());
		request.getSession().setAttribute("admin", one);
		return"/teacher/teacher";
	}
	@RequestMapping(value="/update_pass")
	@ResponseBody
	public AjaxObject updatePass(HttpServletRequest request,Teacher one){
		service.updateInfo(one);
		return null;
	}
	@RequestMapping(value="/own_information")
	public String ownIformation(HttpServletRequest request){
		return"/teacher/teacher_own_information";
	}
	@RequestMapping(value="/delete_paper")
	@ResponseBody public AjaxObject deletePaper(HttpServletRequest request,Paper paper){
		service.deletePaper(paper);
		return null;
	}
	//同组老师评分论题
	@RequestMapping(value="/comment_paper")
	@ResponseBody public AjaxObject  commentPaper(HttpServletRequest request,TpScore one){
		service.commentPaper(one);
		return null;
	}
	
	
    @RequestMapping(value="/add_paper", method = RequestMethod.POST)
    @ResponseBody public Map<String, Object> uploadFile(HttpServletRequest request, @RequestParam(value="file", required=false) MultipartFile file){
    	Map<String,Object> resMap = new HashMap<String,Object>();
    	if(file == null){
    		resMap.put("result","系统出错！");
    	}else{
    		if(file.isEmpty()){
    			resMap.put("result","没有选择文件");
    		}else{
    			Teacher user =(Teacher) request.getSession().getAttribute("admin");
    			String path = user.getTid()+user.getName();
    			String realPath = request.getSession().getServletContext().getRealPath("/file/teacher/"+path+"/paper");
    			String originFileName = user.getName()+"-"+file.getOriginalFilename();
    			            try {
    			                //这里使用Apache的FileUtils方法来进行保存
    			                FileUtils.copyInputStreamToFile(file.getInputStream(),new File(realPath, originFileName));
    			                resMap.put("result","success");
    			                String name = request.getParameter("paper-name");
    			                //添加论题信息到信息表
    			                service.addPaper(name,realPath+"\\"+originFileName,user.getTid());
    			            } catch (IOException e) {
    			                resMap.put("result", "上传失败！");
    			                e.printStackTrace();
    			            }
    			        }
    		}
    	return resMap;
    }
    @RequestMapping(value="download_paper")
    public void downloadFile(HttpServletRequest request,HttpServletResponse response) throws UnsupportedEncodingException{  
    	String fileName = request.getParameter("filename");
    	String userAgent = request.getHeader("User-Agent");
    	String filename = null;
    	int len = fileName.split("\\\\").length;
    	if (userAgent.contains("MSIE")||userAgent.contains("Trident")) {
    		filename = java.net.URLEncoder.encode(fileName.split("\\\\")[len-1], "UTF-8");
		} else {
			filename = new String(fileName.split("\\\\")[len-1].getBytes("UTF-8"),"ISO-8859-1");
		}
        response.setCharacterEncoding("utf-8");  
        response.setContentType("multipart/form-data");  
        response.setHeader("Content-Disposition", "attachment;fileName="+filename);  
        try {  
            File file=new File(fileName);  
            InputStream inputStream=new FileInputStream(file);  
            OutputStream os=response.getOutputStream();  
            byte[] b=new byte[1024];  
            int length;  
            while((length=inputStream.read(b))>0){  
                os.write(b,0,length);  
            }  
            inputStream.close();  
        } catch (FileNotFoundException e) {  
            e.printStackTrace();  
        } catch (IOException e) {  
            e.printStackTrace();  
        }  
    }
    //退出
    @RequestMapping(value="out")
    public String out (HttpServletRequest request){
    	request.getSession().setAttribute("admin",null);
    	return "teacher/teacher_login";
    }
}